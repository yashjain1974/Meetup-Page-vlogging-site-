{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React Udemy\\\\Meetup page Nextjs\\\\store\\\\auth-context.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nvar AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: function login(token) {},\n  logout: function logout() {}\n});\nvar logoutTimer;\n\nvar calculateTime = function calculateTime(expirationTime) {\n  var currentTime = new Date().getTime();\n  var adjExpirationTime = new Date(expirationTime).getTime();\n  var remainingTime = adjExpirationTime - currentTime;\n  return remainingTime;\n};\n\nvar retreiveToken = function retreiveToken() {\n  var storedToken = localStorage.getItem(\"token\");\n  var storedExpirationTime = localStorage.getItem(\"expirationTime\");\n  var remainingRetreiveTime = calculateTime(storedExpirationTime);\n\n  if (remainingRetreiveTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingRetreiveTime\n  };\n};\n\nvar AuthContextProvider = function AuthContextProvider(props) {\n  _s();\n\n  var tokenData = retreiveToken();\n  var initializeToken;\n\n  if (tokenData) {\n    initializeToken = tokenData.token;\n  }\n\n  var _useState = useState(initializeToken),\n      token = _useState[0],\n      setToken = _useState[1];\n\n  var userIsLoggedIn = !!token;\n  var logOutHandler = useCallback(function () {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  var logInHandler = function logInHandler(token, expirationTime) {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    var remainingDuration = calculateTime(expirationTime);\n    logoutTimer = setTimeout(logOutHandler, remainingDuration);\n  };\n\n  useEffect(function () {\n    if (tokenData) {\n      logoutTimer = setTimeout(logOutHandler, tokenData.duration);\n    }\n  }, [tokenData, logOutHandler]);\n  var contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: logInHandler,\n    logout: logOutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(AuthContextProvider, \"TLpy6rfE5JY1Tk0Ri5ROnOs5r+c=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["F:/React Udemy/Meetup page Nextjs/store/auth-context.js"],"names":["React","useEffect","useState","useCallback","AuthContext","createContext","token","isLoggedIn","login","logout","logoutTimer","calculateTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingTime","retreiveToken","storedToken","localStorage","getItem","storedExpirationTime","remainingRetreiveTime","removeItem","duration","AuthContextProvider","props","tokenData","initializeToken","setToken","userIsLoggedIn","logOutHandler","clearTimeout","logInHandler","setItem","remainingDuration","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\n\r\nlet logoutTimer;\r\nconst calculateTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n    const remainingTime = adjExpirationTime - currentTime;\r\n    return remainingTime;\r\n  };\r\n  \r\n  const retreiveToken = () => {\r\n    const storedToken = localStorage.getItem(\"token\");\r\n    const storedExpirationTime = localStorage.getItem(\"expirationTime\");\r\n    \r\n  \r\n    const remainingRetreiveTime = calculateTime(storedExpirationTime);\r\n    if (remainingRetreiveTime <= 3600) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"expirationTime\");\r\n      return null;\r\n    }\r\n    return {\r\n      token: storedToken,\r\n      duration: remainingRetreiveTime,\r\n    };\r\n  };\r\nconst AuthContextProvider = (props) => {\r\n    const tokenData = retreiveToken();\r\n    let initializeToken;\r\n    if (tokenData) {\r\n      initializeToken = tokenData.token;\r\n    }\r\n  \r\n    const [token, setToken] = useState(initializeToken);\r\n    const userIsLoggedIn = !!token;\r\n    const logOutHandler = useCallback(() => {\r\n      setToken(null);\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"expirationTime\");\r\n      \r\n      if (logoutTimer) {\r\n        clearTimeout(logoutTimer);\r\n      }\r\n    }, []);\r\n    const logInHandler = (token, expirationTime) => {\r\n      setToken(token);\r\n      \r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"expirationTime\", expirationTime);\r\n      const remainingDuration = calculateTime(expirationTime);\r\n      logoutTimer = setTimeout(logOutHandler, remainingDuration);\r\n     \r\n    };\r\n    useEffect(() => {\r\n      if(tokenData){\r\n      logoutTimer = setTimeout(logOutHandler, tokenData.duration);\r\n      }\r\n    }, [tokenData, logOutHandler]);\r\n  \r\n    const contextValue = {\r\n      token: token,\r\n      isLoggedIn: userIsLoggedIn,\r\n      login: logInHandler,\r\n      logout: logOutHandler,\r\n    };\r\n    return (\r\n      <AuthContext.Provider value={contextValue}>\r\n        {props.children}\r\n      </AuthContext.Provider>\r\n    );\r\n  };\r\n\r\n  \r\n\r\n\r\n\r\nexport default AuthContext;\r\nexport {AuthContextProvider};\r\n\r\n"]},"metadata":{},"sourceType":"module"}