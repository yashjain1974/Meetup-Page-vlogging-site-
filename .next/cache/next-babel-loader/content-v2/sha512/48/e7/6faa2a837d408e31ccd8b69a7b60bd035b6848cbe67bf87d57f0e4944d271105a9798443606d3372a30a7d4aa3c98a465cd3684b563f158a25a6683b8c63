{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\React Udemy\\\\Meetup page Nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg\",\n      title: \"First meetup\",\n      address: \"23,baker street\",\n      description: \"The meetup description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://yash:rzE07HaQWX1yiRd2@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"); //database\n\n  const db = client.db(); //table\n\n  const meetUpsTable = db.collection(\"meetups\"); //inserting data\n\n  const meetups = await meetUpsTable.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://yash:rzE07HaQWX1yiRd2@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"); //database\n\n  const db = client.db(); //table\n\n  const meetUpsTable = db.collection(\"meetups\"); //inserting data\n\n  const Selectedmeetups = await meetUpsTable.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: Selectedmeetups\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["F:/React Udemy/Meetup page Nextjs/pages/[meetupId]/index.js"],"names":["React","Fragment","MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetUpsTable","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","Selectedmeetups","findOne","props","meetupData"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAC,wEADR;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,OAAO,EAAC,iBAHV;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,sGADmB,CAArB,CADqC,CAIrC;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CALqC,CAMrC;;AACA,QAAMC,YAAY,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAArB,CAPqC,CAQrC;;AACA,QAAMC,OAAO,GAAG,MAAMF,YAAY,CAACG,IAAb,CAAkB,EAAlB,EAAsB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAtB,EAAkCC,OAAlC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,sGADmB,CAArB,CAF4C,CAK5C;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAN4C,CAO5C;;AACA,QAAMC,YAAY,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAArB,CAR4C,CAS5C;;AACA,QAAMe,eAAe,GAAG,MAAMhB,YAAY,CAACiB,OAAb,CAAqB;AAACb,IAAAA,GAAG,EAACQ;AAAL,GAArB,CAA9B;AACAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLY,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEH;AADP;AADF,GAAP;AAKD;AAED,eAAerB,aAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nconst MeetupDetails = () => {\r\n  return (\r\n    <Fragment>\r\n      <MeetupDetail\r\n        image=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg\"\r\n        title=\"First meetup\"\r\n        address=\"23,baker street\"\r\n        description=\"The meetup description\"\r\n      ></MeetupDetail>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://yash:rzE07HaQWX1yiRd2@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  //database\r\n  const db = client.db();\r\n  //table\r\n  const meetUpsTable = db.collection(\"meetups\");\r\n  //inserting data\r\n  const meetups = await meetUpsTable.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://yash:rzE07HaQWX1yiRd2@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  //database\r\n  const db = client.db();\r\n  //table\r\n  const meetUpsTable = db.collection(\"meetups\");\r\n  //inserting data\r\n  const Selectedmeetups = await meetUpsTable.findOne({_id:meetupId});\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: Selectedmeetups,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}