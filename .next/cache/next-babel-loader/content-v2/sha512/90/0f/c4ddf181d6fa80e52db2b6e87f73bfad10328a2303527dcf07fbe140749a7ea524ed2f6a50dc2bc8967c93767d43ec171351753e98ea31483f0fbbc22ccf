{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\React Udemy\\\\Meetup page Nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"V-Meet: \", props.meetupData.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://yash:bh0UtSpeVPh5qdhN@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"); //database\n\n  const db = client.db(); //table\n\n  const meetUpsTable = db.collection(\"meetups\"); //inserting data\n\n  const meetups = await meetUpsTable.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: 'blocking',\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://yash:bh0UtSpeVPh5qdhN@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"); //database\n\n  const db = client.db(); //table\n\n  const meetUpsTable = db.collection(\"meetups\"); //inserting data\n\n  const selectedmeetups = await meetUpsTable.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedmeetups._id.toString(),\n        title: selectedmeetups.title,\n        image: selectedmeetups.image,\n        address: selectedmeetups.address,\n        description: selectedmeetups.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["F:/React Udemy/Meetup page Nextjs/pages/[meetupId]/index.js"],"names":["React","Fragment","Head","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetUpsTable","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedmeetups","findOne","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,+BAAgBA,KAAK,CAACC,UAAN,CAAiBC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD1B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH5B;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJhC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;AAiBA,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,sGADmB,CAArB,CADqC,CAIrC;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CALqC,CAMrC;;AACA,QAAMC,YAAY,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAArB,CAPqC,CAQrC;;AACA,QAAMC,OAAO,GAAG,MAAMF,YAAY,CAACG,IAAb,CAAkB,EAAlB,EAAsB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAtB,EAAkCC,OAAlC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,sGADmB,CAArB,CAF4C,CAK5C;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAN4C,CAO5C;;AACA,QAAMC,YAAY,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAArB,CAR4C,CAS5C;;AACA,QAAMe,eAAe,GAAG,MAAMhB,YAAY,CAACiB,OAAb,CAAqB;AACjDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADoC,GAArB,CAA9B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAEF,eAAe,CAACZ,GAAhB,CAAoBS,QAApB,EADM;AAEVrB,QAAAA,KAAK,EAAEwB,eAAe,CAACxB,KAFb;AAGVE,QAAAA,KAAK,EAAEsB,eAAe,CAACtB,KAHb;AAIVC,QAAAA,OAAO,EAAEqB,eAAe,CAACrB,OAJf;AAKVF,QAAAA,WAAW,EAAEuB,eAAe,CAACvB;AALnB;AADP;AADF,GAAP;AAWD;AAED,eAAeJ,aAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>V-Meet: {props.meetupData.title}</title>\r\n        <meta name=\"description\" content={props.meetupData.description}></meta>\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      ></MeetupDetail>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://yash:bh0UtSpeVPh5qdhN@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  //database\r\n  const db = client.db();\r\n  //table\r\n  const meetUpsTable = db.collection(\"meetups\");\r\n  //inserting data\r\n  const meetups = await meetUpsTable.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: 'blocking',\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://yash:bh0UtSpeVPh5qdhN@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  //database\r\n  const db = client.db();\r\n  //table\r\n  const meetUpsTable = db.collection(\"meetups\");\r\n  //inserting data\r\n  const selectedmeetups = await meetUpsTable.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedmeetups._id.toString(),\r\n        title: selectedmeetups.title,\r\n        image: selectedmeetups.image,\r\n        address: selectedmeetups.address,\r\n        description: selectedmeetups.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}