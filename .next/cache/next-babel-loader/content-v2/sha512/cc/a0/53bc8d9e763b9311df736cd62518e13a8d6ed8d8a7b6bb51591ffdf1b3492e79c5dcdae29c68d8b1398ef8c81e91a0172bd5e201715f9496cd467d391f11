{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\React Udemy\\\\Meetup page Nextjs\\\\store\\\\AuthContextProvider.js\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nlet logoutTimer;\nimport AuthContext from \"./auth-context\";\n\nconst calculateTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingTime = adjExpirationTime - currentTime;\n  return remainingTime;\n};\n\nconst retreiveToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationTime = localStorage.getItem(\"expirationTime\");\n  const remainingRetreiveTime = calculateTime(storedExpirationTime);\n\n  if (remainingRetreiveTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingRetreiveTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  const tokenData = retreiveToken();\n  let initializeToken;\n\n  if (tokenData) {\n    initializeToken = tokenData.token;\n  }\n\n  const {\n    0: token,\n    1: setToken\n  } = useState(initializeToken);\n  const userIsLoggedIn = !!token;\n  const logOutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const logInHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    const remainingDuration = calculateTime(expirationTime);\n    logoutTimer = setTimeout(logOutHandler, remainingDuration);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logOutHandler, tokenData.duration);\n    }\n  }, [tokenData, logOutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: logInHandler,\n    logout: logOutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n};\nexport default AuthContextProvider;","map":{"version":3,"sources":["F:/React Udemy/Meetup page Nextjs/store/AuthContextProvider.js"],"names":["React","useEffect","useState","useCallback","logoutTimer","AuthContext","calculateTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingTime","retreiveToken","storedToken","localStorage","getItem","storedExpirationTime","remainingRetreiveTime","removeItem","token","duration","AuthContextProvider","props","tokenData","initializeToken","setToken","userIsLoggedIn","logOutHandler","clearTimeout","logInHandler","setItem","remainingDuration","setTimeout","contextValue","isLoggedIn","login","logout","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,IAAIC,WAAJ;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,MAAMC,aAAa,GAAIC,cAAD,IAAoB;AACtC,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AACA,QAAME,aAAa,GAAGD,iBAAiB,GAAGH,WAA1C;AACA,SAAOI,aAAP;AACD,CALH;;AAOE,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AAEA,QAAME,qBAAqB,GAAGZ,aAAa,CAACW,oBAAD,CAA3C;;AACA,MAAIC,qBAAqB,IAAI,IAA7B,EAAmC;AACjCH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAJ,IAAAA,YAAY,CAACI,UAAb,CAAwB,gBAAxB;AACA,WAAO,IAAP;AACD;;AACD,SAAO;AACLC,IAAAA,KAAK,EAAEN,WADF;AAELO,IAAAA,QAAQ,EAAEH;AAFL,GAAP;AAID,CAdD;;AAeF,OAAO,MAAMI,mBAAmB,GAAIC,KAAD,IAAW;AAC1C,QAAMC,SAAS,GAAGX,aAAa,EAA/B;AACA,MAAIY,eAAJ;;AACA,MAAID,SAAJ,EAAe;AACbC,IAAAA,eAAe,GAAGD,SAAS,CAACJ,KAA5B;AACD;;AAED,QAAM;AAAA,OAACA,KAAD;AAAA,OAAQM;AAAR,MAAoBxB,QAAQ,CAACuB,eAAD,CAAlC;AACA,QAAME,cAAc,GAAG,CAAC,CAACP,KAAzB;AACA,QAAMQ,aAAa,GAAGzB,WAAW,CAAC,MAAM;AACtCuB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAX,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAJ,IAAAA,YAAY,CAACI,UAAb,CAAwB,gBAAxB;;AAEA,QAAIf,WAAJ,EAAiB;AACfyB,MAAAA,YAAY,CAACzB,WAAD,CAAZ;AACD;AACF,GARgC,EAQ9B,EAR8B,CAAjC;;AASA,QAAM0B,YAAY,GAAG,CAACV,KAAD,EAAQb,cAAR,KAA2B;AAC9CmB,IAAAA,QAAQ,CAACN,KAAD,CAAR;AAEAL,IAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8BX,KAA9B;AACAL,IAAAA,YAAY,CAACgB,OAAb,CAAqB,gBAArB,EAAuCxB,cAAvC;AACA,UAAMyB,iBAAiB,GAAG1B,aAAa,CAACC,cAAD,CAAvC;AACAH,IAAAA,WAAW,GAAG6B,UAAU,CAACL,aAAD,EAAgBI,iBAAhB,CAAxB;AAED,GARD;;AASA/B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGuB,SAAH,EAAa;AACbpB,MAAAA,WAAW,GAAG6B,UAAU,CAACL,aAAD,EAAgBJ,SAAS,CAACH,QAA1B,CAAxB;AACC;AACF,GAJQ,EAIN,CAACG,SAAD,EAAYI,aAAZ,CAJM,CAAT;AAMA,QAAMM,YAAY,GAAG;AACnBd,IAAAA,KAAK,EAAEA,KADY;AAEnBe,IAAAA,UAAU,EAAER,cAFO;AAGnBS,IAAAA,KAAK,EAAEN,YAHY;AAInBO,IAAAA,MAAM,EAAET;AAJW,GAArB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,cACGX,KAAK,CAACe;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5CI;AA8CL,eAAehB,mBAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\nimport AuthContext from \"./auth-context\";\r\nconst calculateTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n    const remainingTime = adjExpirationTime - currentTime;\r\n    return remainingTime;\r\n  };\r\n  \r\n  const retreiveToken = () => {\r\n    const storedToken = localStorage.getItem(\"token\");\r\n    const storedExpirationTime = localStorage.getItem(\"expirationTime\");\r\n  \r\n    const remainingRetreiveTime = calculateTime(storedExpirationTime);\r\n    if (remainingRetreiveTime <= 3600) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"expirationTime\");\r\n      return null;\r\n    }\r\n    return {\r\n      token: storedToken,\r\n      duration: remainingRetreiveTime,\r\n    };\r\n  };\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = retreiveToken();\r\n    let initializeToken;\r\n    if (tokenData) {\r\n      initializeToken = tokenData.token;\r\n    }\r\n  \r\n    const [token, setToken] = useState(initializeToken);\r\n    const userIsLoggedIn = !!token;\r\n    const logOutHandler = useCallback(() => {\r\n      setToken(null);\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"expirationTime\");\r\n      \r\n      if (logoutTimer) {\r\n        clearTimeout(logoutTimer);\r\n      }\r\n    }, []);\r\n    const logInHandler = (token, expirationTime) => {\r\n      setToken(token);\r\n      \r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"expirationTime\", expirationTime);\r\n      const remainingDuration = calculateTime(expirationTime);\r\n      logoutTimer = setTimeout(logOutHandler, remainingDuration);\r\n     \r\n    };\r\n    useEffect(() => {\r\n      if(tokenData){\r\n      logoutTimer = setTimeout(logOutHandler, tokenData.duration);\r\n      }\r\n    }, [tokenData, logOutHandler]);\r\n  \r\n    const contextValue = {\r\n      token: token,\r\n      isLoggedIn: userIsLoggedIn,\r\n      login: logInHandler,\r\n      logout: logOutHandler,\r\n    };\r\n    return (\r\n      <AuthContext.Provider value={contextValue}>\r\n        {props.children}\r\n      </AuthContext.Provider>\r\n    );\r\n  };\r\n\r\n  export default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}