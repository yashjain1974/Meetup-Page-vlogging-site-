{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React Udemy\\\\Meetup page Nextjs\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React, { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["F:/React Udemy/Meetup page Nextjs/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAXD;;KAAMN,a;;AA2DN,eAAeA,aAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { MongoClient,ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      ></MeetupDetail>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://yash:rzE07HaQWX1yiRd2@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  //database\r\n  const db = client.db();\r\n  //table\r\n  const meetUpsTable = db.collection(\"meetups\");\r\n  //inserting data\r\n  const meetups = await meetUpsTable.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://yash:rzE07HaQWX1yiRd2@cluster0.wz0i35s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  //database\r\n  const db = client.db();\r\n  //table\r\n  const meetUpsTable = db.collection(\"meetups\");\r\n  //inserting data\r\n  const selectedmeetups = await meetUpsTable.findOne({_id:ObjectId(meetupId)});\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id:selectedmeetups._id.toString(),\r\n        title:selectedmeetups.title,\r\n        image:selectedmeetups.image,\r\n        address:selectedmeetups.address,\r\n        description:selectedmeetups.description\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}