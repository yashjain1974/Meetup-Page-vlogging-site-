{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\React Udemy\\\\Meetup page Nextjs\\\\components\\\\Auth\\\\AuthForm.js\";\nimport { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useRouter } from 'next/router';\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const router = useRouter();\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const {\n    0: isweekPassword,\n    1: setisWeekPassword\n  } = useState(false);\n  const {\n    0: isweekPasswordMes,\n    1: setisWeekPasswordMes\n  } = useState(\"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const inputEmailRef = useRef();\n  const inputPasswordRef = useRef();\n  const Authctx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  let url;\n\n  async function fetchUserDetail(data, url) {\n    await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Authentication failed\";\n\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n            throw new Error(errorMessage);\n          }\n        });\n      }\n    }).then(data => {\n      const expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n      Authctx.login(data.idToken, expirationTime.toISOString());\n      router.replace('/');\n    }).catch(err => {\n      setisWeekPassword(true);\n      setisWeekPasswordMes(err.message);\n    });\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const entereEmail = inputEmailRef.current.value;\n    const enteredPassword = inputPasswordRef.current.value;\n    const data = {\n      email: entereEmail,\n      password: enteredPassword,\n      returnSecureToken: true\n    };\n    setIsLoading(true);\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBaVgeKQ5_JTkezHpgiY-xBam1HfRU5N6w\";\n      fetchUserDetail(data, url);\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDL9-razGo1HMXZYtLVAISUgIb--XsB4YQ\";\n      fetchUserDetail(data, url);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: inputEmailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: inputPasswordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), isweekPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.invalid,\n          children: isweekPasswordMes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AuthForm;","map":{"version":3,"sources":["F:/React Udemy/Meetup page Nextjs/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","AuthContext","useRouter","classes","AuthForm","router","isLogin","setIsLogin","isweekPassword","setisWeekPassword","isweekPasswordMes","setisWeekPasswordMes","isLoading","setIsLoading","inputEmailRef","inputPasswordRef","Authctx","switchAuthModeHandler","prevState","url","fetchUserDetail","data","fetch","method","body","JSON","stringify","headers","then","res","ok","json","errorMessage","error","message","Error","expirationTime","Date","getTime","expiresIn","login","idToken","toISOString","replace","catch","err","submitHandler","event","preventDefault","entereEmail","current","value","enteredPassword","email","password","returnSecureToken","auth","control","invalid","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\";\n\nimport AuthContext from \"../../store/auth-context\"\nimport {useRouter} from'next/router';\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const router=useRouter();\n  \n  const [isLogin, setIsLogin] = useState(true);\n  const [isweekPassword, setisWeekPassword] = useState(false);\n  const [isweekPasswordMes, setisWeekPasswordMes] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const inputEmailRef = useRef();\n  const inputPasswordRef = useRef();\n  const Authctx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  let url;\n\n  async function fetchUserDetail(data, url) {\n    await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n       \n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n              throw new Error(errorMessage);\n            }\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        Authctx.login(data.idToken, expirationTime.toISOString());\n        router.replace('/');\n        \n      })\n      .catch((err) => {\n        setisWeekPassword(true);\n        setisWeekPasswordMes(err.message);\n      });\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const entereEmail = inputEmailRef.current.value;\n    const enteredPassword = inputPasswordRef.current.value;\n    const data = {\n      email: entereEmail,\n      password: enteredPassword,\n      returnSecureToken: true,\n    };\n    setIsLoading(true);\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBaVgeKQ5_JTkezHpgiY-xBam1HfRU5N6w\";\n      fetchUserDetail(data, url);\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDL9-razGo1HMXZYtLVAISUgIb--XsB4YQ\";\n      fetchUserDetail(data, url);\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={inputEmailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={inputPasswordRef}\n          />\n          {isweekPassword && (\n            <p className={classes.invalid}>{isweekPasswordMes}</p>\n          )}\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Loading...</p>}\n\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}