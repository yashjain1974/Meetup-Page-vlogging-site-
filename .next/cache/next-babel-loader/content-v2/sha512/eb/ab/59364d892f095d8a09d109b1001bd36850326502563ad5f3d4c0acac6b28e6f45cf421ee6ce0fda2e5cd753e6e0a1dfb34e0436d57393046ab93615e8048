{"ast":null,"code":"import React, { useEffect, useState, useCallback } from \"react\";\nvar logoutTimer;\nvar AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: function login(token) {},\n  logout: function logout() {}\n});\n\nvar calculateTime = function calculateTime(expirationTime) {\n  var currentTime = new Date().getTime();\n  var adjExpirationTime = new Date(expirationTime).getTime();\n  var remainingTime = adjExpirationTime - currentTime;\n  return remainingTime;\n};\n\nvar retreiveToken = function retreiveToken() {\n  var storedToken = localStorage.getItem(\"token\");\n  var storedExpirationTime = localStorage.getItem(\"expirationTime\");\n  var remainingRetreiveTime = calculateTime(storedExpirationTime);\n\n  if (remainingRetreiveTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingRetreiveTime\n  };\n};\n\nexport default AuthContext;","map":{"version":3,"sources":["F:/React Udemy/Meetup page Nextjs/store/auth-context.js"],"names":["React","useEffect","useState","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingTime","retreiveToken","storedToken","localStorage","getItem","storedExpirationTime","remainingRetreiveTime","removeItem","duration"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,IAAIC,WAAJ;AACA,IAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAE,eAACF,KAAD,EAAW,CAAE,CAHkB;AAItCG,EAAAA,MAAM,EAAE,kBAAM,CAAE;AAJsB,CAApB,CAApB;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,cAAD,EAAoB;AACxC,MAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,MAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AACA,MAAME,aAAa,GAAGD,iBAAiB,GAAGH,WAA1C;AACA,SAAOI,aAAP;AACD,CALD;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,MAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AAEA,MAAME,qBAAqB,GAAGZ,aAAa,CAACW,oBAAD,CAA3C;;AACA,MAAIC,qBAAqB,IAAI,IAA7B,EAAmC;AACjCH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAJ,IAAAA,YAAY,CAACI,UAAb,CAAwB,gBAAxB;AACA,WAAO,IAAP;AACD;;AACD,SAAO;AACLjB,IAAAA,KAAK,EAAEY,WADF;AAELM,IAAAA,QAAQ,EAAEF;AAFL,GAAP;AAID,CAdD;;AAgBA,eAAelB,WAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n  const remainingTime = adjExpirationTime - currentTime;\r\n  return remainingTime;\r\n};\r\n\r\nconst retreiveToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationTime = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingRetreiveTime = calculateTime(storedExpirationTime);\r\n  if (remainingRetreiveTime <= 3600) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingRetreiveTime,\r\n  };\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}